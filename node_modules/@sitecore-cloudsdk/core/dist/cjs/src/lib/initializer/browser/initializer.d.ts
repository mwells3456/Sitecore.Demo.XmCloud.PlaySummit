import type { ProxySettings } from '../../interfaces';
import type { BrowserSettings, Core, Settings } from './interfaces';
import type { PackageInitializer } from './package-initializer';
export declare let cloudSDKSettings: Settings;
export declare const enabledPackages: Map<string, PackageInitializer>;
export declare let initCoreState: Promise<void> | null;
export declare let cookiesValuesFromEdge: ProxySettings | undefined;
export declare class CloudSDKBrowserInitializer {
    /**
     * Runs the initialization logic. Enables packages and create cookies for CloudSDK.
     * @param settings - Common settings for the CloudSDK
     * @throws the following errors:
     * {@link ErrorMessages.MV_0001}
     * {@link ErrorMessages.MV_0002}
     * {@link ErrorMessages.IE_0001}
     * {@link ErrorMessages.IV_0001}
     */
    constructor(settings: BrowserSettings);
    /**
     * Runs the initialization logic. Enables packages and create cookies for CloudSDK.
     */
    initialize(): void;
    /**
     * Runs any necessary side effects.
     */
    private sideEffects;
    /**
     * Validates the core settings to ensure they meet required criteria.
     *
     * This function validates the provided core settings object to ensure that essential properties
     * such as "sitecoreEdgeContextId" and "siteName" meet specific criteria and are not empty.
     *
     * @throws Error with specific error codes if any required property is missing or empty.
     */
    private validateSettings;
    private createSettings;
    private createCookies;
}
export declare function getCloudSDKSettings(): Settings;
export declare function getEnabledPackage(packageName: string): PackageInitializer | undefined;
export declare let builderInstance: null | CloudSDKBrowserInitializer;
export declare function getCookiesValuesFromEdge(): ProxySettings | undefined;
/**
 * Runs the initialization logic. Enables packages and create cookies for CloudSDK.
 * @param settings - Common settings for the CloudSDK
 * @returns An instance of {@link CloudSDKBrowserInitializer}
 * @throws the following errors:
 * {@link ErrorMessages.MV_0001}
 * {@link ErrorMessages.MV_0002}
 * {@link ErrorMessages.IE_0001}
 * {@link ErrorMessages.IV_0001}
 */
export declare function CloudSDK(settings: BrowserSettings): CloudSDKBrowserInitializer;
declare global {
    interface Personalize {
    }
    interface Events {
    }
    interface Window {
        scCloudSDK: {
            core: Core;
            personalize: Personalize;
            events: Events;
        };
    }
}
