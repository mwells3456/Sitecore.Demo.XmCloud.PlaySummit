import type { Request, Response } from '@sitecore-cloudsdk/utils';
import type { ProxySettings } from '../../interfaces';
import type { ServerSettings, Settings } from './interfaces';
import type { PackageInitializerServer } from './package-initializer';
export declare let cloudSDKSettings: Settings;
export declare const enabledPackages: Map<string, PackageInitializerServer>;
export declare let cloudSKDRequest: Request;
export declare let cloudSKDResponse: Response;
export declare class CloudSDKServerInitializer {
    private request;
    private response;
    /**
     * Runs the initialization logic. Enables packages and create cookies for CloudSDK.
     * @param request - The request object, either a Middleware Request or an HTTP Request
     * @param response - The response object, either a Middleware Next Response or an HTTP Response
     * @param settings - Common settings for the CloudSDK
     * @throws the following errors:
     * {@link ErrorMessages.MV_0001}
     * {@link ErrorMessages.MV_0002}
     * {@link ErrorMessages.IV_0001}
     */
    constructor(request: Request, response: Response, settings: ServerSettings);
    /**
     * Runs the initialization logic. Enables packages and create cookies for CloudSDK.
     */
    initialize(): Promise<void>;
    /**
     * Validates the core settings to ensure they meet required criteria.
     *
     * This function validates the provided core settings object to ensure that essential properties
     * such as "sitecoreEdgeContextId" and "siteName" meet specific criteria and are not empty.
     *
     * @throws Error with specific error codes if any required property is missing or empty.
     */
    private validateSettings;
    private createSettings;
    private createCookies;
    private handleNextJsMiddlewareCookie;
    private handleHttpCookie;
}
export declare function getCloudSDKSettings(): Settings;
export declare function getEnabledPackage(packageName: string): PackageInitializerServer | undefined;
export declare function getCloudSDKRequest(): Request;
export declare function getCloudSDKResponse(): Response;
export declare function getCookiesValuesFromEdge(): ProxySettings | undefined;
export declare let builderInstance: null | CloudSDKServerInitializer;
/**
 * Runs the initialization logic. Enables packages and create cookies for CloudSDK.
 * @param request - The request object, either a Middleware Request or an HTTP Request
 * @param response - The response object, either a Middleware Next Response or an HTTP Response
 * @param settings - Common settings for the CloudSDK
 * @returns An instance of {@link CloudSDKServerInitializer}
 * @throws the following errors:
 * {@link ErrorMessages.MV_0001}
 * {@link ErrorMessages.MV_0002}
 * {@link ErrorMessages.IV_0001}
 */
export declare function CloudSDK(request: Request, response: Response, settings: ServerSettings): CloudSDKServerInitializer;
