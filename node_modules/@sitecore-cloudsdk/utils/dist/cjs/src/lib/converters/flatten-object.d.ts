import type { BasicTypes } from '../interfaces';
/**
 * A function that flattens an object, by combining the keys with an "_".
 * @param data - An object that has the required data to perform the flattening
 * @returns - A new flattened object
 * @example
 *
 * ```ts
 * const object = {order:{amount: 1, delivered: false}}
 * const flattenedObject = flattenObject(object)
 * // flattenedObject will be {order_amount: 1, order_delivered: false}
 * ```
 */
export declare function flattenObject(data: FlattenObjectDataParameters): FlattenedObject;
/**
 * Interface for the data object parameter of the flattenObject function
 */
interface FlattenObjectDataParameters {
    object: NestedObject;
    currentKey?: string;
    newObject?: FlattenedObject;
}
/**
 * Interface for the return object of the flattenObject function
 */
export interface FlattenedObject {
    [key: string]: BasicTypes;
}
/**
 * Interface of the object to flatten
 */
export interface NestedObject {
    [key: string]: BasicTypes | NestedObject;
}
export {};
