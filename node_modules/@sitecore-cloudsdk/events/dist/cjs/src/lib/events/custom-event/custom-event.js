"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CustomEvent = void 0;
const utils_1 = require("@sitecore-cloudsdk/utils");
const consts_1 = require("../../consts");
const base_event_1 = require("../base-event");
const consts_2 = require("../consts");
class CustomEvent extends base_event_1.BaseEvent {
    /**
     * A class that extends from {@link BaseEvent} and has all the required functionality to send a VIEW event
     * @param args - Unified object containing the required properties
     */
    constructor(args) {
        const { channel, currency, language, page, type, extensionData, searchData, ...rest } = args.eventData;
        super({ channel, currency, language, page }, args.id);
        this.extensionData = {};
        this.sendEvent = args.sendEvent;
        this.settings = args.settings;
        this.customEventPayload = {
            type,
            ...rest
        };
        if (extensionData)
            this.extensionData = (0, utils_1.flattenObject)({ object: extensionData });
        const numberOfExtensionDataProperties = Object.entries(this.extensionData).length;
        if (numberOfExtensionDataProperties > consts_2.MAX_EXT_ATTRIBUTES)
            throw new Error(consts_1.ErrorMessages.IV_0005);
        if (numberOfExtensionDataProperties > 0)
            this.customEventPayload.ext = this.extensionData;
        if (searchData)
            this.customEventPayload.sc_search = {
                data: searchData,
                metadata: {
                    // eslint-disable-next-line @typescript-eslint/naming-convention
                    ut_api_version: '1.0'
                }
            };
    }
    /**
     * Sends the event to Sitecore EP
     * @returns - A promise that resolves with either the Sitecore EP response object or null
     */
    async send() {
        const baseAttr = this.mapBaseEventPayload();
        const fetchBody = Object.assign({}, this.customEventPayload, baseAttr);
        return await this.sendEvent(fetchBody, this.settings);
    }
}
exports.CustomEvent = CustomEvent;
