"use strict";
// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendEvent = void 0;
const internal_1 = require("@sitecore-cloudsdk/core/internal");
const consts_1 = require("../../consts");
/**
 * This factory function sends an event to Edge Proxy
 * @param body - The event data to send
 * @param settings - The global settings
 */
async function sendEvent(body, settings) {
    // eslint-disable-next-line max-len
    const eventUrl = `${settings.sitecoreEdgeUrl}/v1/events/${internal_1.API_VERSION}/events?sitecoreContextId=${settings.sitecoreEdgeContextId}&siteId=${settings.siteName}`;
    const startTimestamp = Date.now();
    let debugResponse = {};
    const fetchOptions = {
        body: JSON.stringify(body),
        headers: {
            /* eslint-disable @typescript-eslint/naming-convention */
            'Content-Type': 'application/json',
            'X-Client-Software-ID': consts_1.X_CLIENT_SOFTWARE_ID,
            'X-Library-Version': consts_1.PACKAGE_VERSION
            /* eslint-enable @typescript-eslint/naming-convention */
        },
        method: 'POST'
    };
    (0, internal_1.debug)(consts_1.EVENTS_NAMESPACE)('Events request: %s with options: %O', eventUrl, fetchOptions);
    return await fetch(eventUrl, fetchOptions)
        .then((response) => {
        debugResponse = (0, internal_1.processDebugResponse)(consts_1.EVENTS_NAMESPACE, response);
        return response.json();
    })
        .then((data) => {
        debugResponse.body = data;
        (0, internal_1.debug)(consts_1.EVENTS_NAMESPACE)('Events response in %dms : %O', Date.now() - startTimestamp, debugResponse);
        return data;
    })
        .catch((error) => {
        (0, internal_1.debug)(consts_1.EVENTS_NAMESPACE)('Error: events response: %O', error);
        return null;
    });
}
exports.sendEvent = sendEvent;
