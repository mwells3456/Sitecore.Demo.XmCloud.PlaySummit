import type { EPResponse, Infer, Settings } from '@sitecore-cloudsdk/core/internal';
import type { EventAttributesInput, ExtensionData } from '../common-interfaces';
import { BaseEvent } from '../base-event';
import type { FlattenedObject } from '@sitecore-cloudsdk/utils';
import type { SendEvent } from '../send-event/sendEvent';
export declare class IdentityEvent extends BaseEvent {
    private identityData;
    private sendEvent;
    private extensionData;
    private numberOfExtensionDataProperties;
    private settings;
    /**
     * A class that extends from {@link BaseEvent} and has all the required functionality to send a VIEW event
     *
     * @param args - Unified object containing the required properties
     */
    constructor(args: IdentityEventArguments);
    /**
     * Function that validates the identifiers object, email and date attributes for CDN users
     *  * @param identityData - The data to be validated
     */
    private validateAttributes;
    /**
     * A function that maps the identity event input data with the payload sent to the API
     * @returns - The payload object
     */
    private mapAttributes;
    /**
     * Sends the event to Sitecore EP
     * @returns - A promise that resolves with either the Sitecore EP response object or null
     */
    send(): Promise<EPResponse | null>;
}
/**
 * The JSON array of objects that contain the identity identifiers
 */
interface EPIdentifier {
    expiry_date?: string;
    id: string;
    provider: string;
}
/**
 * Interface with the necessary attributes for the input for sending Identity events
 */
export interface IdentityData extends EventAttributesInput {
    city?: string;
    country?: string;
    dob?: string;
    email?: string;
    firstName?: string;
    gender?: string;
    identifiers: Identifier[];
    lastName?: string;
    mobile?: string;
    phone?: string;
    postalCode?: string;
    state?: string;
    street?: string[];
    title?: string;
    extensionData?: ExtensionData;
}
/**
 * The JSON array of objects that contain the identity identifiers
 */
export interface Identifier {
    expiryDate?: string;
    id: string;
    provider: string;
}
/**
 *  An interface describing the identity event specific payload to be sent to the API
 */
export interface IdentityEventPayload {
    city?: string;
    country?: string;
    dob?: string;
    email?: string;
    firstname?: string;
    gender?: string;
    identifiers: EPIdentifier[];
    lastname?: string;
    mobile?: string;
    phone?: string;
    postal_code?: string;
    state?: string;
    street?: string[];
    title?: string;
    type: 'IDENTITY';
    ext?: FlattenedObject;
}
/**
 * Interface of the unified arguments object for identity event
 */
export interface IdentityEventArguments {
    sendEvent: SendEvent;
    identityData: IdentityData;
    id: string;
    settings: Settings;
    infer?: Infer;
}
export {};
