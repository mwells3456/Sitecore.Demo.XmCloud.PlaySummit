import type { EPResponse, Settings } from '@sitecore-cloudsdk/core/internal';
import type { BasicTypes, NestedObject } from '@sitecore-cloudsdk/utils';
import { BaseEvent } from '../base-event';
import type { EventAttributesInput, ExtensionData } from '../common-interfaces';
import type { SendEvent } from '../send-event/sendEvent';
export declare class CustomEvent extends BaseEvent {
    customEventPayload: CustomEventPayload;
    private sendEvent;
    private extensionData;
    private settings;
    /**
     * A class that extends from {@link BaseEvent} and has all the required functionality to send a VIEW event
     * @param args - Unified object containing the required properties
     */
    constructor(args: CustomEventArguments);
    /**
     * Sends the event to Sitecore EP
     * @returns - A promise that resolves with either the Sitecore EP response object or null
     */
    send(): Promise<EPResponse | null>;
}
/**
 * Interface of the unified arguments object for custom event
 */
export interface CustomEventArguments {
    sendEvent: SendEvent;
    eventData: EventData;
    id: string;
    settings: Settings;
}
/**
 * Interface with the required/optional attributes in order to send a custom event to SitecoreCloud API
 */
export interface CustomEventPayload extends NestedObject {
    sc_search?: {
        data: NestedObject;
        metadata: {
            ut_api_version: string;
        };
    };
    ext?: {
        [key: string]: BasicTypes;
    };
}
/**
 * Interface with the required/optional attributes in order to send a custom event to SitecoreCloud API
 */
export interface EventData extends EventAttributesInput, NestedObject {
    type: string;
    searchData?: NestedObject;
    extensionData?: ExtensionData;
}
