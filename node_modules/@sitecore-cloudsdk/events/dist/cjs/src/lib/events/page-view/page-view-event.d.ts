import type { EPResponse, Infer, Settings } from '@sitecore-cloudsdk/core/internal';
import type { EventAttributesInput, ExtensionData } from '../common-interfaces';
import type { FlattenedObject, NestedObject } from '@sitecore-cloudsdk/utils';
import { BaseEvent } from '../base-event';
import type { SendEvent } from '../send-event/sendEvent';
export declare class PageViewEvent extends BaseEvent {
    static isFirstPageView: boolean;
    private sendEvent;
    private pageViewData?;
    private extensionData;
    private urlSearchParams;
    private includeUTMParameters;
    settings: Settings;
    /**
     * A class that extends from {@link BaseEvent} and has all the required functionality to send a VIEW event
     * @param args - Unified object containing the required properties
     */
    constructor(args: PageViewEventArguments);
    /**
     * Gets the variant ID from the url if not passed by the developer
     * Gets the variant ID from the extension data if not found from the url
     * @returns - variant ID or null
     */
    private getPageVariantId;
    /**
     * Returns the referrer if exists on page view event else null if we are on server and no referrer is on event, else
     * returns the href if on client side and the document referrer is different from the window location hostname
     * @returns - the referrer
     */
    private getReferrer;
    /**
     * Maps parameters given as input to corresponding attributes send to the API
     * @returns the mapped object to be sent as payload
     */
    private mapAttributes;
    /**
     * Sends the event to Sitecore EP
     * @returns - A promise that resolves with either the Sitecore EP response object or null
     */
    send(): Promise<EPResponse | null>;
    /**
     * Retrieves UTM parameters from the url query string
     * @returns - an object containing the UTM parameters if they exist
     */
    private getUTMParameters;
}
/**
 * Interface of the unified arguments object for page view event
 */
export interface PageViewEventArguments {
    sendEvent: SendEvent;
    pageViewData?: PageViewData;
    id: string;
    settings: Settings;
    infer?: Infer;
    extensionData?: NestedObject;
    searchParams: string;
}
/**
 * Type with the required/optional attributes in order to send a view event to SitecoreCloud API
 */
export interface PageViewData extends EventAttributesInput {
    pageVariantId?: string;
    referrer?: string;
    includeUTMParameters?: boolean;
    extensionData?: ExtensionData;
    searchData?: NestedObject;
}
/**
 * Interface with the utm_ parameters
 */
interface UtmParameters {
    [key: `utm_${string}`]: string;
}
/**
 * An interface describing the page view event specific payload to be sent * to the API
 */
export interface PageViewEventPayload extends UtmParameters {
    type: 'VIEW';
    referrer?: string;
    ext?: {
        pageVariantId?: string;
    } & FlattenedObject;
    sc_search?: {
        data: NestedObject;
        metadata: {
            ut_api_version: string;
        };
    };
}
export {};
