import type { Settings } from '@sitecore-cloudsdk/core/internal';
import type { NestedObject } from '@sitecore-cloudsdk/utils';
import type { FailedCalledFlowsResponse } from './send-call-flows-request';
export declare class Personalizer {
    private browserId;
    private guestId?;
    /**
     * The Personalizer Class runs a flow of interactive experiments.
     * @param browserId - The browser id of the user
     * @param guestId - The guestRef of the user
     */
    constructor(browserId: string, guestId?: string | undefined);
    /**
     * A function to make a request to the Sitecore EP /callFlows API endpoint
     * @param personalizeData - The personalize input from the developer
     * @param settings - The setting that was set during initialization
     * @param opts - Optional object that contains options for timeout and UA
     * @returns - A promise that resolves with either the Sitecore EP response object or null
     */
    getInteractiveExperienceData(personalizeData: PersonalizeData, settings: Settings, searchParams: string, opts?: {
        timeout?: number;
        userAgent?: string | null;
    }): Promise<unknown | null | FailedCalledFlowsResponse>;
    /**
     * A function that sanitizes the personalize input data
     * @returns - The sanitized object
     */
    private sanitizeInput;
    /**
     * A function that maps the personalize input data with the EP
     * @returns - The EP object
     */
    private mapPersonalizeInputToEPData;
    /**
     * A validation method to throw error for the mandatory property for runtime users
     */
    private validate;
    /**
     * Retrieves UTM parameters from the url query string e.g. `utm_test1=123&utm_test2=456`
     * @param urlParams - The url params passed
     * @param prefix - The prefix we want to extract from the params
     * @returns - an object containing the UTM parameters (if they exist) in the form: `utm: {test1: 123, test2: 456}`
     */
    private extractUrlParamsWithPrefix;
}
/**
 * An interface that describes the geolocation attributes.
 */
export interface PersonalizeGeolocation {
    city?: string;
    country?: string;
    region?: string;
}
/**
 * An interface that describes the flow execution model attributes input for the library
 */
export interface PersonalizeData {
    channel: string;
    currency?: string;
    email?: string;
    friendlyId: string;
    geo?: PersonalizeGeolocation;
    identifier?: PersonalizeIdentifierInput;
    language?: string;
    params?: PersonalizeInputParams;
    pageVariantIds?: string[];
}
/**
 * An interface that describes the identifier model attributes for the library
 */
export interface PersonalizeIdentifierInput {
    id: string;
    provider: string;
}
/**
 * A type that describes the params field
 */
export type PersonalizeInputParams = NestedObject;
