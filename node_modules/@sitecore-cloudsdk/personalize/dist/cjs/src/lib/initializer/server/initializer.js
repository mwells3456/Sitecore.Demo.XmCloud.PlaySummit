"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.verifyPersonalizePackageExistence = exports.addPersonalize = exports.sideEffects = void 0;
// © Sitecore Corporation A/S. All rights reserved. Sitecore® is a registered trademark of Sitecore Corporation A/S.
const internal_1 = require("@sitecore-cloudsdk/core/internal");
const server_1 = require("@sitecore-cloudsdk/core/server");
const consts_1 = require("../../consts");
const createPersonalizeCookie_1 = require("./createPersonalizeCookie");
async function sideEffects() {
    const cloudSDKSettings = (0, internal_1.getCloudSDKSettingsServer)();
    const personalizeSettings = (0, internal_1.getEnabledPackageServer)(consts_1.PACKAGE_NAME)?.settings;
    (0, internal_1.debug)(consts_1.PERSONALIZE_NAMESPACE)('personalizeServer library initialized');
    if (!cloudSDKSettings.cookieSettings.enableServerCookie || !personalizeSettings.enablePersonalizeCookie)
        return;
    await (0, createPersonalizeCookie_1.createPersonalizeCookie)((0, internal_1.getCloudSDKRequest)(), (0, internal_1.getCloudSDKResponse)(), personalizeSettings, cloudSDKSettings);
}
exports.sideEffects = sideEffects;
/**
 * Makes the functionality of the personalize package available.
 *
 * @returns An instance of {@link CloudSDKServerInitializer}
 *
 */
function addPersonalize(settings = { enablePersonalizeCookie: false }) {
    const cookieSettings = {
        name: {
            guestId: `${internal_1.COOKIE_NAME_PREFIX}${(0, internal_1.getCloudSDKSettingsServer)().sitecoreEdgeContextId}_personalize`
        }
    };
    const personalizeInitializer = new internal_1.PackageInitializerServer({
        settings: { ...settings, cookieSettings },
        sideEffects
    });
    internal_1.enabledPackagesServer.set(consts_1.PACKAGE_NAME, personalizeInitializer);
    return this;
}
exports.addPersonalize = addPersonalize;
server_1.CloudSDKServerInitializer.prototype.addPersonalize = addPersonalize;
function verifyPersonalizePackageExistence() {
    if (!(0, internal_1.getEnabledPackageServer)(consts_1.PACKAGE_NAME))
        throw Error(consts_1.ErrorMessages.IE_0017);
}
exports.verifyPersonalizePackageExistence = verifyPersonalizePackageExistence;
